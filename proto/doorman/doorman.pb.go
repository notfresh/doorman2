// Copyright 2016 Google, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: doorman.proto

package doorman

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Algorithm_Kind int32

const (
	Algorithm_NO_ALGORITHM       Algorithm_Kind = 0
	Algorithm_STATIC             Algorithm_Kind = 1
	Algorithm_PROPORTIONAL_SHARE Algorithm_Kind = 2
	Algorithm_FAIR_SHARE         Algorithm_Kind = 3
)

// Enum value maps for Algorithm_Kind.
var (
	Algorithm_Kind_name = map[int32]string{
		0: "NO_ALGORITHM",
		1: "STATIC",
		2: "PROPORTIONAL_SHARE",
		3: "FAIR_SHARE",
	}
	Algorithm_Kind_value = map[string]int32{
		"NO_ALGORITHM":       0,
		"STATIC":             1,
		"PROPORTIONAL_SHARE": 2,
		"FAIR_SHARE":         3,
	}
)

func (x Algorithm_Kind) Enum() *Algorithm_Kind {
	p := new(Algorithm_Kind)
	*p = x
	return p
}

func (x Algorithm_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Algorithm_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_doorman_proto_enumTypes[0].Descriptor()
}

func (Algorithm_Kind) Type() protoreflect.EnumType {
	return &file_doorman_proto_enumTypes[0]
}

func (x Algorithm_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Algorithm_Kind) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Algorithm_Kind(num)
	return nil
}

// Deprecated: Use Algorithm_Kind.Descriptor instead.
func (Algorithm_Kind) EnumDescriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{14, 0}
}

// Encapsulates a lease on capacity with a expiry_time in seconds
// since the epoch.
type Lease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpiryTime      *int64   `protobuf:"varint,1,req,name=expiry_time,json=expiryTime" json:"expiry_time,omitempty"`
	RefreshInterval *int64   `protobuf:"varint,2,req,name=refresh_interval,json=refreshInterval" json:"refresh_interval,omitempty"`
	Capacity        *float64 `protobuf:"fixed64,3,req,name=capacity" json:"capacity,omitempty"`
}

func (x *Lease) Reset() {
	*x = Lease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lease) ProtoMessage() {}

func (x *Lease) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lease.ProtoReflect.Descriptor instead.
func (*Lease) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{0}
}

func (x *Lease) GetExpiryTime() int64 {
	if x != nil && x.ExpiryTime != nil {
		return *x.ExpiryTime
	}
	return 0
}

func (x *Lease) GetRefreshInterval() int64 {
	if x != nil && x.RefreshInterval != nil {
		return *x.RefreshInterval
	}
	return 0
}

func (x *Lease) GetCapacity() float64 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

// Encapsulates the information we need to send to get capacity for a
// single resource.
type ResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId *string  `protobuf:"bytes,1,req,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	Priority   *int64   `protobuf:"varint,2,req,name=priority" json:"priority,omitempty"`
	Has        *Lease   `protobuf:"bytes,3,opt,name=has" json:"has,omitempty"`
	Wants      *float64 `protobuf:"fixed64,4,req,name=wants" json:"wants,omitempty"`
}

func (x *ResourceRequest) Reset() {
	*x = ResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRequest) ProtoMessage() {}

func (x *ResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRequest.ProtoReflect.Descriptor instead.
func (*ResourceRequest) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceRequest) GetResourceId() string {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return ""
}

func (x *ResourceRequest) GetPriority() int64 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *ResourceRequest) GetHas() *Lease {
	if x != nil {
		return x.Has
	}
	return nil
}

func (x *ResourceRequest) GetWants() float64 {
	if x != nil && x.Wants != nil {
		return *x.Wants
	}
	return 0
}

// The GetCapacityRequest contains the identifier of the client making
// the request and a list of single resource capacity request protocol
// buffers.
type GetCapacityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId *string            `protobuf:"bytes,1,req,name=client_id,json=clientId" json:"client_id,omitempty"`
	Resource []*ResourceRequest `protobuf:"bytes,2,rep,name=resource" json:"resource,omitempty"`
}

func (x *GetCapacityRequest) Reset() {
	*x = GetCapacityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCapacityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCapacityRequest) ProtoMessage() {}

func (x *GetCapacityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCapacityRequest.ProtoReflect.Descriptor instead.
func (*GetCapacityRequest) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{2}
}

func (x *GetCapacityRequest) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *GetCapacityRequest) GetResource() []*ResourceRequest {
	if x != nil {
		return x.Resource
	}
	return nil
}

// Contains the capacity allocated by the server for a single
// resource.
type ResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId   *string  `protobuf:"bytes,1,req,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	Gets         *Lease   `protobuf:"bytes,2,req,name=gets" json:"gets,omitempty"`
	SafeCapacity *float64 `protobuf:"fixed64,3,opt,name=safe_capacity,json=safeCapacity" json:"safe_capacity,omitempty"`
}

func (x *ResourceResponse) Reset() {
	*x = ResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceResponse) ProtoMessage() {}

func (x *ResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceResponse.ProtoReflect.Descriptor instead.
func (*ResourceResponse) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceResponse) GetResourceId() string {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return ""
}

func (x *ResourceResponse) GetGets() *Lease {
	if x != nil {
		return x.Gets
	}
	return nil
}

func (x *ResourceResponse) GetSafeCapacity() float64 {
	if x != nil && x.SafeCapacity != nil {
		return *x.SafeCapacity
	}
	return 0
}

// This message type is used when the server wants to convey the
// address of a master. If the the optional master_address field
// is not there that means that the server wants to tell us who
// the master is, but it doesn't know.
type Mastership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterAddress *string `protobuf:"bytes,1,opt,name=master_address,json=masterAddress" json:"master_address,omitempty"`
}

func (x *Mastership) Reset() {
	*x = Mastership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mastership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mastership) ProtoMessage() {}

func (x *Mastership) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mastership.ProtoReflect.Descriptor instead.
func (*Mastership) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{4}
}

func (x *Mastership) GetMasterAddress() string {
	if x != nil && x.MasterAddress != nil {
		return *x.MasterAddress
	}
	return ""
}

// The response to a GetCapacity request is a list of protocol buffers
// specifying the capacity for a single resource.
// If the mastership field is there the server is telling us that it is
// not the master. The new master is in the mastership message, unless
// the server does not know who the master is, in which case the
// mastership field will be there, but the master_address field in it will
// be empty.
type GetCapacityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response   []*ResourceResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
	Mastership *Mastership         `protobuf:"bytes,2,opt,name=mastership" json:"mastership,omitempty"`
}

func (x *GetCapacityResponse) Reset() {
	*x = GetCapacityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCapacityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCapacityResponse) ProtoMessage() {}

func (x *GetCapacityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCapacityResponse.ProtoReflect.Descriptor instead.
func (*GetCapacityResponse) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{5}
}

func (x *GetCapacityResponse) GetResponse() []*ResourceResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetCapacityResponse) GetMastership() *Mastership {
	if x != nil {
		return x.Mastership
	}
	return nil
}

type PriorityBandAggregate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority   *int64   `protobuf:"varint,1,req,name=priority" json:"priority,omitempty"`
	NumClients *int64   `protobuf:"varint,2,req,name=num_clients,json=numClients" json:"num_clients,omitempty"`
	Wants      *float64 `protobuf:"fixed64,3,req,name=wants" json:"wants,omitempty"`
}

func (x *PriorityBandAggregate) Reset() {
	*x = PriorityBandAggregate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriorityBandAggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriorityBandAggregate) ProtoMessage() {}

func (x *PriorityBandAggregate) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriorityBandAggregate.ProtoReflect.Descriptor instead.
func (*PriorityBandAggregate) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{6}
}

func (x *PriorityBandAggregate) GetPriority() int64 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *PriorityBandAggregate) GetNumClients() int64 {
	if x != nil && x.NumClients != nil {
		return *x.NumClients
	}
	return 0
}

func (x *PriorityBandAggregate) GetWants() float64 {
	if x != nil && x.Wants != nil {
		return *x.Wants
	}
	return 0
}

type ServerCapacityResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId *string                  `protobuf:"bytes,1,req,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	Has        *Lease                   `protobuf:"bytes,2,opt,name=has" json:"has,omitempty"`
	Wants      []*PriorityBandAggregate `protobuf:"bytes,3,rep,name=wants" json:"wants,omitempty"`
}

func (x *ServerCapacityResourceRequest) Reset() {
	*x = ServerCapacityResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCapacityResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCapacityResourceRequest) ProtoMessage() {}

func (x *ServerCapacityResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCapacityResourceRequest.ProtoReflect.Descriptor instead.
func (*ServerCapacityResourceRequest) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{7}
}

func (x *ServerCapacityResourceRequest) GetResourceId() string {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return ""
}

func (x *ServerCapacityResourceRequest) GetHas() *Lease {
	if x != nil {
		return x.Has
	}
	return nil
}

func (x *ServerCapacityResourceRequest) GetWants() []*PriorityBandAggregate {
	if x != nil {
		return x.Wants
	}
	return nil
}

type GetServerCapacityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId *string                          `protobuf:"bytes,1,req,name=server_id,json=serverId" json:"server_id,omitempty"`
	Resource []*ServerCapacityResourceRequest `protobuf:"bytes,2,rep,name=resource" json:"resource,omitempty"`
}

func (x *GetServerCapacityRequest) Reset() {
	*x = GetServerCapacityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerCapacityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerCapacityRequest) ProtoMessage() {}

func (x *GetServerCapacityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerCapacityRequest.ProtoReflect.Descriptor instead.
func (*GetServerCapacityRequest) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{8}
}

func (x *GetServerCapacityRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *GetServerCapacityRequest) GetResource() []*ServerCapacityResourceRequest {
	if x != nil {
		return x.Resource
	}
	return nil
}

type ServerCapacityResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId   *string    `protobuf:"bytes,1,req,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	Gets         *Lease     `protobuf:"bytes,2,req,name=gets" json:"gets,omitempty"`
	Algorithm    *Algorithm `protobuf:"bytes,3,opt,name=algorithm" json:"algorithm,omitempty"`
	SafeCapacity *float64   `protobuf:"fixed64,4,opt,name=safe_capacity,json=safeCapacity" json:"safe_capacity,omitempty"`
}

func (x *ServerCapacityResourceResponse) Reset() {
	*x = ServerCapacityResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCapacityResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCapacityResourceResponse) ProtoMessage() {}

func (x *ServerCapacityResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCapacityResourceResponse.ProtoReflect.Descriptor instead.
func (*ServerCapacityResourceResponse) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{9}
}

func (x *ServerCapacityResourceResponse) GetResourceId() string {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return ""
}

func (x *ServerCapacityResourceResponse) GetGets() *Lease {
	if x != nil {
		return x.Gets
	}
	return nil
}

func (x *ServerCapacityResourceResponse) GetAlgorithm() *Algorithm {
	if x != nil {
		return x.Algorithm
	}
	return nil
}

func (x *ServerCapacityResourceResponse) GetSafeCapacity() float64 {
	if x != nil && x.SafeCapacity != nil {
		return *x.SafeCapacity
	}
	return 0
}

// The response to a GetServerCapacity request is a list of protocol buffers
// specifying the capacity for a single resource.
// If the mastership field is there the server is telling us that it is
// not the master. The new master is in the mastership message, unless
// the server does not know who the master is, in which case the
// mastership field will be there, but the master_address field in it will
// be empty.
type GetServerCapacityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response   []*ServerCapacityResourceResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
	Mastership *Mastership                       `protobuf:"bytes,2,opt,name=mastership" json:"mastership,omitempty"`
}

func (x *GetServerCapacityResponse) Reset() {
	*x = GetServerCapacityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerCapacityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerCapacityResponse) ProtoMessage() {}

func (x *GetServerCapacityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerCapacityResponse.ProtoReflect.Descriptor instead.
func (*GetServerCapacityResponse) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{10}
}

func (x *GetServerCapacityResponse) GetResponse() []*ServerCapacityResourceResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetServerCapacityResponse) GetMastership() *Mastership {
	if x != nil {
		return x.Mastership
	}
	return nil
}

// The ReleaseCapacity RPC instructs the server to release all leases
// that this client has on one or more resources. The lease is expected
// to expire as part of this RPC, so the client should not use the resource
// anymore.
type ReleaseCapacityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId   *string  `protobuf:"bytes,1,req,name=client_id,json=clientId" json:"client_id,omitempty"`
	ResourceId []string `protobuf:"bytes,2,rep,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (x *ReleaseCapacityRequest) Reset() {
	*x = ReleaseCapacityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseCapacityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseCapacityRequest) ProtoMessage() {}

func (x *ReleaseCapacityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseCapacityRequest.ProtoReflect.Descriptor instead.
func (*ReleaseCapacityRequest) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{11}
}

func (x *ReleaseCapacityRequest) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *ReleaseCapacityRequest) GetResourceId() []string {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

// A ReleaseCapacity RPC can only fail if the server we are talking to
// is not the master. In that case the mastership field indicates who
// the master is (if we know, if we don't know the mastership field will
// be there but the optional master_addres field inside mastership will
// not be there).
type ReleaseCapacityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mastership *Mastership `protobuf:"bytes,1,opt,name=mastership" json:"mastership,omitempty"`
}

func (x *ReleaseCapacityResponse) Reset() {
	*x = ReleaseCapacityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseCapacityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseCapacityResponse) ProtoMessage() {}

func (x *ReleaseCapacityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseCapacityResponse.ProtoReflect.Descriptor instead.
func (*ReleaseCapacityResponse) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{12}
}

func (x *ReleaseCapacityResponse) GetMastership() *Mastership {
	if x != nil {
		return x.Mastership
	}
	return nil
}

// NamedParameter encapsulates a name/value pair which is used to
// configure an Algorithm (see below).
type NamedParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *NamedParameter) Reset() {
	*x = NamedParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedParameter) ProtoMessage() {}

func (x *NamedParameter) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedParameter.ProtoReflect.Descriptor instead.
func (*NamedParameter) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{13}
}

func (x *NamedParameter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *NamedParameter) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Algorithm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind *Algorithm_Kind `protobuf:"varint,1,req,name=kind,enum=doorman.Algorithm_Kind" json:"kind,omitempty"`
	// How long should the lease be, in seconds.
	LeaseLength *int64 `protobuf:"varint,2,req,name=lease_length,json=leaseLength" json:"lease_length,omitempty"`
	// How many seconds should the client wait until refreshing its
	// lease.
	RefreshInterval *int64            `protobuf:"varint,3,req,name=refresh_interval,json=refreshInterval" json:"refresh_interval,omitempty"`
	Parameters      []*NamedParameter `protobuf:"bytes,4,rep,name=parameters" json:"parameters,omitempty"`
	// By default the learning mode duration is the lease length,
	// however if you want to live dangerously, and assume that
	// clients are living up to their responsibility to contact
	// the server every refresh_interval, you can specify a shorter
	// learning mode here. You can also specify a longer learning
	// mode duration (longer than the lease length), but then you
	// are a muppet (or you do not trust the clients, in which case
	// you need to fix the client implementation).
	LearningModeDuration *int64 `protobuf:"varint,5,opt,name=learning_mode_duration,json=learningModeDuration" json:"learning_mode_duration,omitempty"`
}

func (x *Algorithm) Reset() {
	*x = Algorithm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm) ProtoMessage() {}

func (x *Algorithm) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm.ProtoReflect.Descriptor instead.
func (*Algorithm) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{14}
}

func (x *Algorithm) GetKind() Algorithm_Kind {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return Algorithm_NO_ALGORITHM
}

func (x *Algorithm) GetLeaseLength() int64 {
	if x != nil && x.LeaseLength != nil {
		return *x.LeaseLength
	}
	return 0
}

func (x *Algorithm) GetRefreshInterval() int64 {
	if x != nil && x.RefreshInterval != nil {
		return *x.RefreshInterval
	}
	return 0
}

func (x *Algorithm) GetParameters() []*NamedParameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Algorithm) GetLearningModeDuration() int64 {
	if x != nil && x.LearningModeDuration != nil {
		return *x.LearningModeDuration
	}
	return 0
}

// ResourceTemplate is used to instantiate the actual configuration
// for a resource based on a match with the identifier_glob glob.
type ResourceTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Glob used to match actual resources.
	IdentifierGlob *string `protobuf:"bytes,1,req,name=identifier_glob,json=identifierGlob" json:"identifier_glob,omitempty"`
	// Capacity in service units
	Capacity *float64 `protobuf:"fixed64,2,req,name=capacity" json:"capacity,omitempty"`
	// Algorithm used to divide capacity between clients.
	Algorithm *Algorithm `protobuf:"bytes,3,req,name=algorithm" json:"algorithm,omitempty"`
	// Capacity to use in "safe" mode.
	// You can set this to a number and then the client will use that number
	// as the capacity in case it cannot refresh its lease.
	// If this field is absent the system returns a dynamic safe capacity in
	// the response, which is the available capacity divided by the number of
	// clients that the server knows about.
	SafeCapacity *float64 `protobuf:"fixed64,4,opt,name=safe_capacity,json=safeCapacity" json:"safe_capacity,omitempty"`
	// Description of the resource.
	Description *string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
}

func (x *ResourceTemplate) Reset() {
	*x = ResourceTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceTemplate) ProtoMessage() {}

func (x *ResourceTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceTemplate.ProtoReflect.Descriptor instead.
func (*ResourceTemplate) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{15}
}

func (x *ResourceTemplate) GetIdentifierGlob() string {
	if x != nil && x.IdentifierGlob != nil {
		return *x.IdentifierGlob
	}
	return ""
}

func (x *ResourceTemplate) GetCapacity() float64 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

func (x *ResourceTemplate) GetAlgorithm() *Algorithm {
	if x != nil {
		return x.Algorithm
	}
	return nil
}

func (x *ResourceTemplate) GetSafeCapacity() float64 {
	if x != nil && x.SafeCapacity != nil {
		return *x.SafeCapacity
	}
	return 0
}

func (x *ResourceTemplate) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

// The resource configuration consists of a list of templates.
type ResourceRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of ResourceTemplates specifying available resources. Order
	// of elements in this list is significant: it will be used to match
	// incoming requests. A template for * should be the last element.
	Resources []*ResourceTemplate `protobuf:"bytes,1,rep,name=resources" json:"resources,omitempty"`
}

func (x *ResourceRepository) Reset() {
	*x = ResourceRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRepository) ProtoMessage() {}

func (x *ResourceRepository) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRepository.ProtoReflect.Descriptor instead.
func (*ResourceRepository) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{16}
}

func (x *ResourceRepository) GetResources() []*ResourceTemplate {
	if x != nil {
		return x.Resources
	}
	return nil
}

// zx: 放心，这本身就是空的
// The request to obtain the master's address.
type DiscoveryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DiscoveryRequest) Reset() {
	*x = DiscoveryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryRequest) ProtoMessage() {}

func (x *DiscoveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryRequest.ProtoReflect.Descriptor instead.
func (*DiscoveryRequest) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{17}
}

// The response containing the master's address.
type DiscoveryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mastership *Mastership `protobuf:"bytes,1,req,name=mastership" json:"mastership,omitempty"`
	IsMaster   *bool       `protobuf:"varint,2,req,name=is_master,json=isMaster" json:"is_master,omitempty"`
}

func (x *DiscoveryResponse) Reset() {
	*x = DiscoveryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doorman_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryResponse) ProtoMessage() {}

func (x *DiscoveryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doorman_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryResponse.ProtoReflect.Descriptor instead.
func (*DiscoveryResponse) Descriptor() ([]byte, []int) {
	return file_doorman_proto_rawDescGZIP(), []int{18}
}

func (x *DiscoveryResponse) GetMastership() *Mastership {
	if x != nil {
		return x.Mastership
	}
	return nil
}

func (x *DiscoveryResponse) GetIsMaster() bool {
	if x != nil && x.IsMaster != nil {
		return *x.IsMaster
	}
	return false
}

var File_doorman_proto protoreflect.FileDescriptor

var file_doorman_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x22, 0x6f, 0x0a, 0x05, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x01, 0x52,
	0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x86, 0x01, 0x0a, 0x0f, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x03, 0x68, 0x61,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x03, 0x68, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x01, 0x52, 0x05, 0x77, 0x61, 0x6e,
	0x74, 0x73, 0x22, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x7c, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x04, 0x67, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x04,
	0x67, 0x65, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x73, 0x61, 0x66,
	0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x33, 0x0a, 0x0a, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x81,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x22, 0x6a, 0x0a, 0x15, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x42, 0x61,
	0x6e, 0x64, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x75,
	0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x61, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x01, 0x52, 0x05, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x98,
	0x01, 0x0a, 0x1d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x03, 0x68, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x03,
	0x68, 0x61, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x7b, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x67, 0x65,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x04, 0x67, 0x65, 0x74, 0x73, 0x12, 0x30,
	0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x41, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x73, 0x61, 0x66, 0x65, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x95, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64,
	0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x22, 0x56, 0x0a,
	0x16, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x17, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x22, 0x3a, 0x0a, 0x0e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xc3, 0x02, 0x0a, 0x09, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12,
	0x2b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x29, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64,
	0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x04, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x4f, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48,
	0x4d, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x10, 0x01, 0x12,
	0x16, 0x0a, 0x12, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f,
	0x53, 0x48, 0x41, 0x52, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x41, 0x49, 0x52, 0x5f,
	0x53, 0x48, 0x41, 0x52, 0x45, 0x10, 0x03, 0x22, 0xd0, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x47, 0x6c, 0x6f, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x01, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x30, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x41,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x73, 0x61, 0x66, 0x65,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x12, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x65, 0x0a,
	0x11, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0a, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x32, 0xca, 0x02, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x42, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x19,
	0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x64, 0x6f, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x21, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1f,
	0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2f, 0x64, 0x6f, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
}

var (
	file_doorman_proto_rawDescOnce sync.Once
	file_doorman_proto_rawDescData = file_doorman_proto_rawDesc
)

func file_doorman_proto_rawDescGZIP() []byte {
	file_doorman_proto_rawDescOnce.Do(func() {
		file_doorman_proto_rawDescData = protoimpl.X.CompressGZIP(file_doorman_proto_rawDescData)
	})
	return file_doorman_proto_rawDescData
}

var file_doorman_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_doorman_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_doorman_proto_goTypes = []interface{}{
	(Algorithm_Kind)(0),                    // 0: doorman.Algorithm.Kind
	(*Lease)(nil),                          // 1: doorman.Lease
	(*ResourceRequest)(nil),                // 2: doorman.ResourceRequest
	(*GetCapacityRequest)(nil),             // 3: doorman.GetCapacityRequest
	(*ResourceResponse)(nil),               // 4: doorman.ResourceResponse
	(*Mastership)(nil),                     // 5: doorman.Mastership
	(*GetCapacityResponse)(nil),            // 6: doorman.GetCapacityResponse
	(*PriorityBandAggregate)(nil),          // 7: doorman.PriorityBandAggregate
	(*ServerCapacityResourceRequest)(nil),  // 8: doorman.ServerCapacityResourceRequest
	(*GetServerCapacityRequest)(nil),       // 9: doorman.GetServerCapacityRequest
	(*ServerCapacityResourceResponse)(nil), // 10: doorman.ServerCapacityResourceResponse
	(*GetServerCapacityResponse)(nil),      // 11: doorman.GetServerCapacityResponse
	(*ReleaseCapacityRequest)(nil),         // 12: doorman.ReleaseCapacityRequest
	(*ReleaseCapacityResponse)(nil),        // 13: doorman.ReleaseCapacityResponse
	(*NamedParameter)(nil),                 // 14: doorman.NamedParameter
	(*Algorithm)(nil),                      // 15: doorman.Algorithm
	(*ResourceTemplate)(nil),               // 16: doorman.ResourceTemplate
	(*ResourceRepository)(nil),             // 17: doorman.ResourceRepository
	(*DiscoveryRequest)(nil),               // 18: doorman.DiscoveryRequest
	(*DiscoveryResponse)(nil),              // 19: doorman.DiscoveryResponse
}
var file_doorman_proto_depIdxs = []int32{
	1,  // 0: doorman.ResourceRequest.has:type_name -> doorman.Lease
	2,  // 1: doorman.GetCapacityRequest.resource:type_name -> doorman.ResourceRequest
	1,  // 2: doorman.ResourceResponse.gets:type_name -> doorman.Lease
	4,  // 3: doorman.GetCapacityResponse.response:type_name -> doorman.ResourceResponse
	5,  // 4: doorman.GetCapacityResponse.mastership:type_name -> doorman.Mastership
	1,  // 5: doorman.ServerCapacityResourceRequest.has:type_name -> doorman.Lease
	7,  // 6: doorman.ServerCapacityResourceRequest.wants:type_name -> doorman.PriorityBandAggregate
	8,  // 7: doorman.GetServerCapacityRequest.resource:type_name -> doorman.ServerCapacityResourceRequest
	1,  // 8: doorman.ServerCapacityResourceResponse.gets:type_name -> doorman.Lease
	15, // 9: doorman.ServerCapacityResourceResponse.algorithm:type_name -> doorman.Algorithm
	10, // 10: doorman.GetServerCapacityResponse.response:type_name -> doorman.ServerCapacityResourceResponse
	5,  // 11: doorman.GetServerCapacityResponse.mastership:type_name -> doorman.Mastership
	5,  // 12: doorman.ReleaseCapacityResponse.mastership:type_name -> doorman.Mastership
	0,  // 13: doorman.Algorithm.kind:type_name -> doorman.Algorithm.Kind
	14, // 14: doorman.Algorithm.parameters:type_name -> doorman.NamedParameter
	15, // 15: doorman.ResourceTemplate.algorithm:type_name -> doorman.Algorithm
	16, // 16: doorman.ResourceRepository.resources:type_name -> doorman.ResourceTemplate
	5,  // 17: doorman.DiscoveryResponse.mastership:type_name -> doorman.Mastership
	18, // 18: doorman.Capacity.Discovery:input_type -> doorman.DiscoveryRequest
	3,  // 19: doorman.Capacity.GetCapacity:input_type -> doorman.GetCapacityRequest
	9,  // 20: doorman.Capacity.GetServerCapacity:input_type -> doorman.GetServerCapacityRequest
	12, // 21: doorman.Capacity.ReleaseCapacity:input_type -> doorman.ReleaseCapacityRequest
	19, // 22: doorman.Capacity.Discovery:output_type -> doorman.DiscoveryResponse
	6,  // 23: doorman.Capacity.GetCapacity:output_type -> doorman.GetCapacityResponse
	11, // 24: doorman.Capacity.GetServerCapacity:output_type -> doorman.GetServerCapacityResponse
	13, // 25: doorman.Capacity.ReleaseCapacity:output_type -> doorman.ReleaseCapacityResponse
	22, // [22:26] is the sub-list for method output_type
	18, // [18:22] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_doorman_proto_init() }
func file_doorman_proto_init() {
	if File_doorman_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_doorman_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCapacityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mastership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCapacityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriorityBandAggregate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCapacityResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerCapacityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCapacityResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerCapacityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseCapacityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseCapacityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doorman_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_doorman_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_doorman_proto_goTypes,
		DependencyIndexes: file_doorman_proto_depIdxs,
		EnumInfos:         file_doorman_proto_enumTypes,
		MessageInfos:      file_doorman_proto_msgTypes,
	}.Build()
	File_doorman_proto = out.File
	file_doorman_proto_rawDesc = nil
	file_doorman_proto_goTypes = nil
	file_doorman_proto_depIdxs = nil
}
